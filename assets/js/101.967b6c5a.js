(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{319:function(n,e,t){"use strict";t.r(e);var o=t(5),s=Object(o.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"动态组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态组件"}},[n._v("#")]),n._v(" 动态组件")]),n._v(" "),e("p",[n._v("Vue 异步组件可以延迟组件的加载，当组件需要被渲染时才进行加载，这样可以提高页面的加载速度和用户体验。在 Vue 中，异步组件可以通过两种方式实现：使用 Vue.component 方法的 component 选项和使用 import() 函数动态导入组件。")]),n._v(" "),e("ol",[e("li",[n._v("使用 Vue.component 方法的 component 选项\n在定义组件时，可以使用 Vue.component 方法，并将组件的 component 选项设置为一个函数，该函数返回一个 import() 函数：")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("Vue.component('async-component', function (resolve) {\n  // 使用 import() 函数动态导入组件\n  import('./AsyncComponent.vue').then((module) => {\n    // 当导入完成后，调用 resolve 函数并传入组件\n    resolve(module.default)\n  })\n})\n\n")])])]),e("p",[n._v("在上面的代码中，定义了一个名为 async-component 的异步组件，它使用 import() 函数动态导入了一个名为 AsyncComponent.vue 的组件。当导入完成后，调用 resolve 函数并传入组件。")]),n._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[n._v("使用 import() 函数动态导入组件\n在定义组件时，可以使用 import() 函数动态导入组件，并将组件的 default 导出：")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const AsyncComponent = () => import('./AsyncComponent.vue')\n\nexport default {\n  name: 'app',\n  components: {\n    AsyncComponent,\n  },\n}\n")])])]),e("p",[n._v("在上面的代码中，使用 import() 函数动态导入了一个名为 AsyncComponent.vue 的组件，并将组件作为 default 导出。在组件的 components 选项中，可以将该组件设置为异步组件，Vue 会在需要渲染该组件时进行加载。")]),n._v(" "),e("p",[n._v("在使用异步组件时，可以将组件使用 Vue.component 方法全局注册，也可以在组件定义的 components 选项中注册。下面是一个完整的代码演示：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\x3c!-- AsyncComponent.vue --\x3e\n<template>\n  <div>\n    <h1>异步组件</h1>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AsyncComponent',\n}\n<\/script>\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("\x3c!-- App.vue --\x3e\n<template>\n  <div>\n    <h1>Vue 异步组件</h1>\n    <async-component></async-component>\n  </div>\n</template>\n\n<script>\nVue.component('async-component', function (resolve) {\n  // 使用 import() 函数动态导入组件\n  import('./AsyncComponent.vue').then((module) => {\n    // 当导入完成后，调用 resolve 函数并传入组件\n    resolve(module.default)\n  })\n})\n\nexport default {\n  name: 'App',\n}\n<\/script>\n")])])]),e("p",[n._v("在上面的代码中，定义了一个名为 AsyncComponent 的异步组件和一个名为 App 的根组件。在根组件中使用了 async-component 组件，当该组件需要被渲染时，Vue 会根据异步组件的定义动态加载组件。")])])}),[],!1,null,null,null);e.default=s.exports}}]);